;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(read-from-kill-ring-history tmm--history xref--read-identifier-history grep-files-history grep-regexp-history ido-buffer-history gud-gud-gdb-history woman-topic-history input-method-history compile-history shell-command-history erc-nick-history-list erc-server-history-list ivy-history lispy-tag-history command-history read-number-history ido-file-history empty-history read-expression-history yes-or-no-p-history buffer-name-history file-name-history minibuffer-history extended-command-history evil-ex-history))
(setq tmm--history '("h==>Help" "y==>YASnippet" "c==>C" "t==>Tools" "b==>Buffers" "o==>Options" "e==>Edit" "f==>File"))
(setq grep-files-history '("*.el"))
(setq grep-regexp-history '("plist-get"))
(setq ido-buffer-history '("*scratch*" "init.el" "config.org" "Main.hs" "*Messages*" "config.org" "scratch" "setup.org" "scratch" "*Pp Macroexpand Output*" "scratch" "setup.el" "setup.org" "setup.el" "*scratch*" "*Messages*" "dmenu.org" "drw.h" "drw.c" "dmenu.c" "drw.c" "dmenu.c" "config.mk" "Makefile" "main.zig" "*compilation*" "*Messages*" "main.zig" "build.zig" "*Messages*" "drw.h" "*Pp Eval Output*" "*Messages*" "config.org" "init.el" "*Messages*" "config.org" "*Messages*" "init.el" "config.org" "init.el" "config.org" "*Messages*" "config.org" "init.el" "config.org" "init.el" "config.org" "init.el" "config.org" "init.el" "config.org" "config.el" "init.el" "config.org" "config.el" "init.el" "org-bullets.el" "init.el" "config.org" "config.el" "init.el" "config.org" "init.el" "*Help*" "*Compile-Log*" "*Buffer List*" "config.org" "app.c" "*Buffer List*" "*Async Shell Command*"))
(setq gud-gud-gdb-history '("gdb --fullname app"))
(setq compile-history '("ghc Main.hs" "zig build run" "zig build" "gcc simple.c -o simple && ./simple" "gcc simple.c -o simple" "gcc simple.c -o simple && ./simple" "gcc simple.c && ./simple" "./app" "make -k "))
(setq shell-command-history '("ctags -e -R ." "etags *" "pwd" "cd .." "pwd" "ls" "microsoft-edge-stable &" "pwd"))
(setq erc-nick-history-list '("karim"))
(setq erc-server-history-list '("irc.libera.chat"))
(setq ivy-history '(#("pcomplete-stub" 0 14 (ivy-index 0)) #("savehist-mode" 0 13 (ivy-index 18931)) #("dolist" 0 6 (ivy-index 0)) #("/home/karim/vanilla-emacs/config.org" 0 36 (ivy-index 0)) #("*Compile-Log*" 0 13 (ivy-index 2))))
(setq command-history '((evil-record-macro 113) (evil-record-macro 32) (describe-function 'org-superstar-configure-like-org-bullets) (toc-org-mode 'toggle) (execute-extended-command nil "toc-org-mode" nil) (toc-org-mode 'toggle) (execute-extended-command nil "toc-org-mode" "toc-o") (org-mode-restart) (execute-extended-command nil "org-mode-restart" nil) (org-mode-restart) (execute-extended-command nil "org-mode-restart" nil) (evil-change 4779 4782 'inclusive nil nil) (evil-org-delete 4791 4834 'line nil nil) (evil-org-delete 4791 4861 'line nil nil) (evil-org-delete 4791 4839 'line nil nil) (org-mode-restart) (execute-extended-command nil "org-mode-restart" nil) (org-mode-restart) (execute-extended-command nil "org-mode-restart" "org-mode-ho") (toc-org-mode 'toggle) (execute-extended-command nil "toc-org-mode" "toc-mo") (emacs-init-time) (execute-extended-command nil "emacs-init-time" "init-time") (evil-org-delete 4440 4441 'line nil nil) (evil-org-delete 4440 4473 'line nil nil) (evil-org-delete 4440 4451 'line nil nil) (follow-mode 'toggle) (execute-extended-command nil "follow-mode" "follow") (evil-org-delete 2821 2822 'line nil nil) (evil-org-delete 2821 2832 'line nil nil) (evil-org-delete 2832 2862 'line nil nil) (evil-record-macro 32) (org-open-at-point nil) (execute-extended-command nil "org-open-at-point" nil) (evil-record-macro 113) (org-open-at-point nil) (execute-extended-command nil "org-open-at-point" nil) (describe-function 'evil-ret) (evil-org-delete 4920 4978 'line nil nil) (describe-function 'org-open-at-point) (evil-org-delete 3913 3915 'line nil nil) (org-open-at-point nil) (execute-extended-command nil "org-open-at-point" "org-open-a") (toc-org-follow-markdown-link) (execute-extended-command nil "toc-org-follow-markdown-link" "org-link") (org-agenda-open-link nil) (execute-extended-command nil "org-agenda-open-link" nil) (org-agenda-open-link nil) (execute-extended-command nil "org-agenda-open-link" "org-link") (evil-org-open-links 365 447 nil) (execute-extended-command nil "evil-org-open-links" "org-link") (org-next-link) (execute-extended-command nil "org-next-link" "org-link") (execute-extended-command nil "org-link-open-from-string" "org-link") (org-return nil nil 1) (execute-extended-command nil "org-return" "org-return") (evil-org-return nil) (execute-extended-command nil "evil-org-return" "org-return") (toc-org-follow-markdown-link) (execute-extended-command nil "toc-org-follow-markdown-link" nil) (toc-org-follow-markdown-link) (execute-extended-command nil "toc-org-follow-markdown-link" nil) (toc-org-follow-markdown-link) (execute-extended-command nil "toc-org-follow-markdown-link" "org-follow") (org-agenda-follow-mode) (execute-extended-command nil "org-agenda-follow-mode" "org-follow") (evil-org-delete 5207 5207 'line nil nil) (evil-org-delete 5207 5219 'line nil nil) (evil-delete 1 13 'line nil nil) (toc-org-mode 'toggle) (execute-extended-command nil "toc-org-mode" "toc-") (evil-change 3583 3587 'inclusive nil nil) (company-select-next 1) (execute-extended-command nil "company-select-next" "company-select-") (evil-org-delete 4366 4367 'line nil nil) (evil-org-delete 4292 4307 'line nil nil) (evil-org-delete 4363 4370 'line nil nil) (global-company-mode 'toggle) (execute-extended-command nil "global-company-mode" "global-cop") (evil-record-macro 32) (evil-record-macro 113) (evil-record-macro 113) (evil-record-macro 113) (evil-record-macro 113) (evil-record-macro 113) (evil-org-delete 4504 4505 'line nil nil) (evil-org-delete 5054 5056 'line nil nil) (evil-org-delete 4577 4578 'line nil nil) (evil-org-delete 5054 5063 'line nil nil) (evil-org-delete 5054 5055 'line nil nil) (evil-org-delete 5054 5067 'line nil nil) (evil-delete 4827 4828 'line nil nil) (evil-delete 5057 5057 'line nil nil) (evil-delete 5057 5067 'line nil nil) (evil-delete 5057 5070 'line nil nil) (org-insert-structure-template "src") (evil-org-mode 'toggle) (execute-extended-command nil "evil-org-mode" "evil-org") (emacs-init-time) (execute-extended-command nil "emacs-init-time" nil)))
(setq ido-file-history '("config.org" "config.el" "config.org" "init.el" "config.org" "setup.el" "config.org" "Main.hs" "config.org" "init.el" "Main.hs" "config.org" "setup.org" "setup.el" "config.org" "init.el" "config.org" "init.el" "config.org" "init.el" "config.org" "dmenu.c" "init.el" "main.zig" "dmenu.org" "drw.h" "TAGS" "config.def.h" "dmenu.c" "config.org" "Makefile" "config.mk" "config.def.h" "util.h" "drw.h" "dmenu.c" "init.el" "config.org" "dmenu.c" "." "simple.c" "app.c" "." "build.zig" "main.zig" "init.el" "config.org" "util.h" "drw.c" "drw.h" "util.h" "simple.c" "util.c" "drw.c" "dmenu.c" "app.c" "arg.h" "LICENSE" "README.org" "test.el" "init.el" "config.el" "init.el" "config.org" "init.el" "config.org" "init.el" "config.org" "init.el" "config.org" "init.el" "config.org" "init.el" "config.org" "init.el" "config.org" "init.el" "config.org" "use-package-core.el" "." "use-package-bind-key.el" "LICENSE" "init.el" "config.org" "init.el" "config.org" "init.el" "config.org" "init.el" "org-bullets.el" "config.org" "init.el" "config.org" "init.el" "config.org" "config.el" "init.el" "config.org" "init.el" "app.c"))
(setq read-expression-history '("(setq company-idle-delay 0)" "(setq company-idle-delay nil)"))
(setq yes-or-no-p-history '("yes" "no" "yes" "no" "n" "no" "yes"))
(setq buffer-name-history '("*Compile-Log*" #("*Macroexpansion*" 0 16 (ivy-index 0)) "*Buffer List*" "*scratch*" "init.el" "config.org" "Main.hs" "*Messages*" "config.org" "scratch" "setup.org" "scratch" "*Pp Macroexpand Output*" "scratch" "setup.el" "setup.org" "setup.el" "*scratch*" "*Messages*" "dmenu.org" "drw.h" "drw.c" "dmenu.c" "drw.c" "dmenu.c" "main.zig" "*compilation*" "*Messages*" "main.zig" "build.zig" "*Messages*" "drw.h" "*Pp Eval Output*" "*Messages*" "config.org" "init.el" "*Messages*" "config.org" "*Messages*" "init.el" "config.org" "init.el" "config.org" "*Messages*" "config.org" "init.el" "config.org" "init.el" "config.org" "init.el" "config.org" "init.el" "config.org" "config.el" "init.el" "config.org" "config.el" "init.el" "org-bullets.el" "init.el" "config.org" "config.el" "init.el" "config.org" "init.el" "*Help*" "*Compile-Log*" "*Buffer List*" "config.org" "app.c" "*Buffer List*" "*Async Shell Command*" "source##usr##src##debug##glibc##glibc##csu##..##sysdeps##nptl##libc_start_call_main.h" "*Buffer List*" "app.c" "init.el" "app.c" "init.el" "app.c" "init.el" "app.c" "init.el" "app.c" "*Buffer List*" "init.el" "app.c" "init.el" "app.c" "*Buffer List*" "app.c" "init.el" "app.c" "init.el" "app.c" "init.el" "app.c" "init.el" "app.c" "init.el" "app.c"))
(setq file-name-history '("~/vanilla-emacs/config.org" "~/vanilla-emacs/config.el" #("/home/karim/vanilla-emacs/config.org" 0 36 (ivy-index 0)) "~/vanilla-emacs/init.el" "~/vanilla-emacs/config.org" "/home/karim/vanilla-emacs/config.el" "/home/karim/vanilla-emacs/init.el" "/home/karim/repos/setup/setup.el" "/home/karim/Workspaces/Haskell/PP/Main.hs" "/home/karim/vanilla-emacs/init.el" "/home/karim/Workspaces/Haskell/PP/Main.hs" "/home/karim/repos/setup/setup.org" "/home/karim/repos/setup/setup.el" "/home/karim/vanilla-emacs/init.el" "/home/karim/vanilla-emacs/init.el" "/home/karim/vanilla-emacs/init.el" "/home/karim/repos/dmenu/dmenu.c" "/home/karim/vanilla-emacs/init.el" "/home/karim/Workspaces/zig/dmenu/src/main.zig" "/home/karim/repos/dmenu/dmenu.org" "/home/karim/repos/dmenu/drw.h" "/home/karim/repos/dmenu/config.def.h" "/home/karim/repos/dmenu/dmenu.c" "/home/karim/repos/dmenu/Makefile" "/home/karim/repos/dmenu/config.mk" "/home/karim/repos/dmenu/config.def.h" "/home/karim/repos/dmenu/util.h" "/home/karim/repos/dmenu/drw.h" "/home/karim/repos/dmenu/dmenu.c" "/home/karim/vanilla-emacs/init.el" "/home/karim/repos/dmenu/dmenu.c" "/home/karim/Workspaces/C/X/simple.c" "/home/karim/Workspaces/C/X/app.c" "/home/karim/Workspaces/zig/dmenu/build.zig" "/home/karim/Workspaces/zig/dmenu/src/main.zig" "/home/karim/vanilla-emacs/init.el" "/home/karim/repos/dmenu/util.h" "/home/karim/repos/dmenu/drw.c" "/home/karim/repos/dmenu/drw.h" "/home/karim/repos/dmenu/util.h" "/home/karim/Workspaces/C/X/simple.c" "/home/karim/repos/dmenu/util.c" "/home/karim/repos/dmenu/drw.c" "/home/karim/repos/dmenu/dmenu.c" "/home/karim/Workspaces/C/X/app.c" "/home/karim/repos/dmenu/arg.h" "/home/karim/repos/dmenu/LICENSE" "/home/karim/.config/xmonad/README.org" "/home/karim/Workspaces/EmacsLisp/test.el" "/home/karim/vanilla-emacs/init.el" "/home/karim/vanilla-emacs/init.el" "/home/karim/vanilla-emacs/init.el" "/home/karim/vanilla-emacs/init.el" "/home/karim/vanilla-emacs/init.el" "/home/karim/vanilla-emacs/init.el" "/home/karim/vanilla-emacs/init.el" "/home/karim/vanilla-emacs/init.el" "/home/karim/repos/use-package/use-package-core.el" "/home/karim/repos/use-package/use-package-bind-key.el" "/home/karim/repos/use-package/LICENSE" "/home/karim/vanilla-emacs/init.el" "/home/karim/vanilla-emacs/init.el" "/home/karim/vanilla-emacs/init.el" "/home/karim/vanilla-emacs/init.el" "/home/karim/vanilla-emacs/lisp/org-bullets.el" "/home/karim/vanilla-emacs/init.el" "/home/karim/vanilla-emacs/init.el" "/home/karim/vanilla-emacs/config.el" "/home/karim/vanilla-emacs/init.el" "/home/karim/vanilla-emacs/init.el" "/home/karim/Workspaces/C/X/app.c" "/home/karim/Agenda/MI-lectures.norg" "/home/karim/Workspaces/C/X/app.c" "/home/karim/vanilla-emacs/init.el"))
(setq minibuffer-history '("org-superstar-configure-like-org-bullets" "/home/karim/vanilla-emacs/config.org" "evil-ret" "/home/karim/vanilla-emacs/config.org" "org-open-at-point" "/home/karim/vanilla-emacs/config.org" "add-hook" "/home/karim/vanilla-emacs/config.org" "use-package-expand-minimally" "/home/karim/vanilla-emacs/config.org" "mapcar" "server-client-instructions" "dotimes" "dolist" "/home/karim/vanilla-emacs/config.org" "/home/karim/vanilla-emacs/config.el" "ivy-read" "completing-read" "ido-completing-read" "icomplete--fido-mode-setup" "icomplete-fido-ret" "ido-save-history" "find-file" "/home/karim/vanilla-emacs/config.org" "recentf-list" "recentf-mode" "recentf-load-list" "recentf-save-list" "fido-vertical-mode" "buffer-menu" "buffer-menu-open" "buffer-menu" "next-buffer" "org-modules" "with-eval-after-load" "evil-cross-lines" "package-initialize" "update-file-autoloads" "package-initialize" "update-file-autoloads" "autoload" "doom-themes-org-config" "package-initialize" "org-indent-mode" "package-initialize" "with-eval-after-load" "customize-set-value" "doom-themes-enable-bold" "set-face-attribute" "customize-set-variable" "menu-bar-mode" "server-client-instructions" "list-packages" "eval-when-compile" "setup-indian-environment-map" "setup--make-docstring" "func-arity" "mod" "zerop" "null" "alist-get" "macroexpand-all-environment" "switch-to-buffer" "with-temp-buffer" "alist-get" "get" "and" "push" "dolist" "list" "member" "gensym" "cadr" "car-safe" "eq" "push" "defalias" "defmacro" "cadr" "append" "debug" "macroexpand-all" "assq" "setf" "alist-get" "or" "alist-get" "plist-get" "put" "func-arity" "macroexpand-all" "macroexp-progn" "assq" "and" "get" "bolp" "propertize" "defalias" "assq" "funcall"))
(setq extended-command-history '("toc-org-mode" "org-mode-restart" "toc-org-mode" "emacs-init-time" "follow-mode" "org-open-at-point" "toc-org-follow-markdown-link" "org-agenda-open-link" "evil-org-open-links" "org-next-link" "org-link-open-from-string" "org-return" "evil-org-return" "toc-org-follow-markdown-link" "org-agenda-follow-mode" "toc-org-mode" "company-select-next" "global-company-mode" "evil-org-mode" "emacs-init-time" "pp-macroexpand-last-sexp" "emacs-init-time" "pp-macroexpand-last-sexp" "outline-mark-subtree" "pp-macroexpand-last-sexp" #("Info-help" 0 9 (ivy-index 22)) #("help" 0 4 (ivy-index 12)) #("pp-macroexpand-last-sexp" 0 24 (ivy-index 0)) #("pp-macroexpand-expression" 0 25 (ivy-index 1)) #("emacs-lisp-macroexpand" 0 22 (ivy-index 0)) #("c-macro-expand" 0 14 (ivy-index 0)) #("emacs-init-time" 0 15 (ivy-index 0)) #("calc-times" 0 10 (ivy-index 1)) #("emacs-uptime" 0 12 (ivy-index 2)) #("marginalia-mode" 0 15 (ivy-index 0)) "fido-mo
fido-mode" "ivy-mode" "icomplete-fido-ret" "recentf-mode" "ido-mode" "icomplete-vertical-mode" "fido-vertical-mode" "ido-find-file" "recentf-load-list" "recentf-open-files" "recentf-mode" "buffer-menu-open" "buffer-menu-other-window" "buffer-menu-open" "buffer-menu" "org-mode" "comment-box" "compile" "haskell-indent-mode" "eval-buffer" "emacs-lisp-mode" "haskell-mode" "emacs-lisp-mode" "eval-buffer" "emacs-lisp-mode" "eval-buffer" "haskell-mode" "kill-this-buffer" "eval-buffer" "haskell-menu" "hs-hide-block" "hs-show-block" "eval-buffer" "hs-hide-block" "hs-minor-mode" "emacs-lisp-mode" "elisp-byte-code-mode" "org-mode" "load-theme" "save-buffers-kill-emacs" "eval-buffer" "kill-emacs" "load-theme" "kill-emacs" "eval-buffer" "kill-buffer" "electric-indent-mode" "zig-mode" "eval-buffer" "zig-mode" "eval-buffer" "eval-expression" "compile" "zig-mode" "eval-buffer" "org-mode" "elisp-byte-code-mode" "zig-mode" "eval-buffer" "zig-mode" "electric-indent-mode" "compile" "zig-run" "zig-compile" "compile"))
(setq evil-ex-history '(#("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("%s/install-package-once '/install-once /" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33) 33 34 (ex-index 34) 34 35 (ex-index 35) 35 36 (ex-index 36) 36 37 (ex-index 37) 37 38 (ex-index 38) 38 39 (ex-index 39) 39 40 (ex-index 40)) #("s/install-package-once '/install-once /" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33) 33 34 (ex-index 34) 34 35 (ex-index 35) 35 36 (ex-index 36) 36 37 (ex-index 37) 37 38 (ex-index 38) 38 39 (ex-index 39)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("e" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1))))
(setq evil-jumps-history 'nil)
